---
- name: Galaxy Application Server Build
  hosts: buildah_server
  vars_files: [vars.yml]
  vars:
    GALAXY_ROOT: /srv/galaxy
    container_name: galaxy_app
    roles: []
  tasks:
    - name: Create Container
      command: buildah from alpine
      register: container_handle

    - debug:
        var: container_handle

    - name: Configure Container
      command: buildah config {{ options | map('format', '--%s') | join(' ') }} {{ container_handle }}
      vars:
        options:
        - author "{{ author }}"
        - cmd 'uwsgi --yaml {{ GALAXY_ROOT }}/config/galaxy.yml'
        - env GALAXY_ROOT={{ GALAXY_ROOT }}
        # TODO - healthcheck command

    - name: Populate Container
      command: buildah copy {{ container_handle }} '{{ playbook_dir }}/{{ item.from }}' '{{ GALAXY_ROOT }}/{{ item.to }}'
      loop:
      - {from: galaxy/requirements.txt, to: requirements.txt}
      - {from: galaxy/lib, to: lib}
      - {from: galaxy/locale, to: locale}
      - {from: galaxy/templates, to: templates}
      - {from: config/, to: config/}

    - name: Configure Container Environment
      block:
        - name: Install System Dependencies
          command: apk {{ item }}
          loop:
          - update
          - add python3
          - add --virtual build-dependencies py3-setuptools build-base gcc linux-headers musl-dev python3-dev libffi-dev zlib-dev
          remote_user: root

        - name: Install Python Dependencies
          command: pip3 install -r $GALAXY_ROOT/requirements.txt --index-url https://wheels.galaxyproject.org/simple --extra-index-url https://pypi.python.org/simple --no-cache-dir

        - name: Clean Up
          command: apk del build-dependencies
          remote_user: root

        - name: Execute Roles
          include_role:
            name: {{ item }}
          loop: {{ roles }}

      connector: buildah
      remote_addr: {{ container_handle }}
    - name: Commit Container
      command: buildah commit {{ container_handle }} {{ container_name }}
