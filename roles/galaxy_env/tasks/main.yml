---
- name: Install system packages
  ansible.builtin.shell: 'apt update && apt install -y --no-install-recommends ca-certificates curl {{ build_deps | join(" ") }}'

- name: Install virtualenv, and extras
  pip:
   name: "{{ ['virtualenv', 'mercurial'] + pip_extra }}"
   extra_args: "--no-cache-dir"

- tempfile:
    state: file
  register: requirements

- name: Copy in files
  copy:
    src: '{{ item.from }}'
    dest: '{{ item.to }}'
  loop:
  - { from: requirements.txt, to: '{{ requirements.path }}' }

#- name: env_run
#  template:
#    src: env_run.sh.j2
#    dest: "/env_run.sh"
#    mode: u=rwx,g=rx,o=rx

- name: Add group
  group:
    name: '{{ app.group }}'
    gid: '{{ app.gid }}'

- name: Add user
  user:
    name: '{{ app.user }}'
    group: '{{ app.group }}'
    uid: '{{ app.uid }}'
    shell: /sbin/nologin

- name: Install additional python dependencies
  pip:
    name: [psycopg2, watchdog]
    #virtualenv: '{{ venv_path }}'
    #virtualenv_site_packages: no
    extra_args: '--index-url https://wheels.galaxyproject.org/simple --extra-index-url https://pypi.python.org/simple --no-cache-dir --upgrade'

- name: Install Galaxy python dependencies
  pip:
    requirements: '{{ requirements.path }}'
#    virtualenv: '{{ venv_path }}'
#    virtualenv_site_packages: no
    extra_args: '--index-url https://wheels.galaxyproject.org/simple --extra-index-url https://pypi.python.org/simple --no-cache-dir'

- name: Ensure root dir exists
  file:
    path: '{{ paths.root }}'
    recurse: yes
    state: directory

- name: Download Involucro
  get_url:
    url: https://github.com/involucro/involucro/releases/download/v1.1.2/involucro
    dest: '{{ paths.root }}/involucro'
    mode: u=rwx,g=rwx,o=rx

#- name: Download uwping
#  get_url:
#    url: https://github.com/che0/uwping/releases/download/14.0/uwping
#    dest: '/usr/local/bin/uwping'
#    mode: u=rwx,g=rwx,o=rx

- name: Download handler probe script
  get_url:
    url: https://raw.githubusercontent.com/galaxyproject/galaxy-helm/master/galaxy/scripts/probedb.py
    dest: '{{ paths.root }}/probedb.py'

- name: Clean up build dependencies
  shell: "apt purge -y {{ build_deps | join(' ') }}"

- name: Clean up apt
  command: apt clean

- name: Clean up temp
  file:
    path: '{{ requirements.path }}'
    state: absent