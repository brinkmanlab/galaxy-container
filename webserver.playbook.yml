---
- name: Start NodeJS container
  hosts: buildah_server
  tasks:
    - name: Run Node
      command: podman create --mount type=bind,src={{ playbook_dir }}/galaxy,dst=/tmp/galaxy --mount type=bind,src={{ playbook_dir }}/.git,dst=/tmp/.git mhart/alpine-node
      register: node_handle

    - name: Add Podman container to inventory
      add_host:
        name: "{{ node_handle.stdout }}"
        ansible_connection: podman

- name: Build Static Content
  hosts: "{{ hostvars.buildah_server.node_handle.stdout }}"
  tasks:
    - name: Install Git
      command: apk add --no-cache git

    - name: Install Dependencies
      command: yarn install --frozen-lockfile

    - name: Build Client
      command: yarn run build-production-maps

- name: Shutdown NodeJS
  hosts: buildah_server
  tasks:
    - command: podman rm -f {{ node_handle.stdout }}

- name: Create Webserver Container
  hosts: buildah_server
  vars_files: [vars.yml]
  tasks:
  - name: Create container
    command: buildah from nginx:alpine
    register: container_handle

  - debug:
      var: container_handle

  - name: Configure container
    command: buildah config {{ options | map('format', '--%s') | join(' ') }} {{ container_handle.stdout }}
    vars:
      options:
      - author "{{ author }}"
      # TODO - healthcheck command

  - name: Populate container
    command: buildah copy {{ container_handle }} '{{ playbook_dir }}/{{ item.from }}' '{{ GALAXY_ROOT }}/{{ item.to }}'
    loop:
      - {from: galaxy/client/static, to: /srv/galaxy}
      # TODO nginx.conf

  - name: Add webserver container to inventory
    add_host:
      name: "{{ container_handle.stdout }}"
      ansible_connection: buildah

  - name: Commit Container
    command: buildah commit {{ container_handle.stdout }} {{ container_name }}

